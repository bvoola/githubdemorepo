name: deploy developer code
on:
  workflow_dispatch:
  pull_request:
    types: [opened, edited, synchronize, reopened]
jobs:
  validate:
    runs-on: ubuntu-24.04
   # env:
    #  SF_ACCESS_TOKEN: ${{ secrets.SF_ACCESS_TOKEN }}
   # container:
   #   image: radon57/sfdx-cli
    steps:
      - name: get code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: list files
        run: ls
        
      - name: install sfdx cli & lint
        run: |
          node --version
          npm install @salesforce/cli --global
          npm install --save-dev lint-staged
          echo y | sf plugins:install sfdx-git-delta
          sfdx sgd:source:delta --help

        
      - name: check sfdx version
        run: |
          sfdx -v
          sf -v
          
      - name: authorize org
        run: |
          echo ${{secrets.SF_AUTH_URL}} > ./SF_SFDX_URL.txt
          sfdx auth:sfdxurl:store -f ./SF_SFDX_URL.txt
         # sf org login access-token --instance-url https://copadotrial91510619.my.salesforce.com/ --no-prompt
         # sf org display user -o bvoola@gmail.com.copadoproject
         
      - name: generate package
        run: |
          echo "generating delta changes package"
          echo "source branch: ${{ github.head_ref }} target branch: ${{ github.base_ref }}"
          echo "source branch: $GITHUB_HEAD_REF target branch: $GITHUB_BASE_REF"
          sf sgd:source:delta -a 59.0 --to ${{ github.event.pull_request.head.sha }} --from ${{ github.event.pull_request.base.sha }} --output .
          echo "sourcebranch: ${{github.head_ref}} target branch:${{github.base_ref}} "
          echo "package.xml"
          cat ./package/package.xml
          echo "destructivechanges.xml"
          ./destructiveChanges/destructiveChanges.xml
      - name: eslint
        run: |
          echo "eslint results"
          npm run lint

   #   - name: verify prettier
    #    run: |
    #      echo " prettier results"
     #     npm run prettier:verify
          
      - name: pmd scan
        uses: pmd/pmd-github-action@v2.0.0
        id: pmd
        with:
          version: '6.55.0'
          sourcePath: 'force-app'
          rulesets: 'ruleset.xml'      

      # Check for PMD violations
      - name: 'Check for PMD violations'
        if: steps.pmd.outputs.violations != 0
        run: exit 1
      
      - name: test classes and code coverage
        run: echo "test results"

      - name: validate package
        run: echo "validating delta changes package"

      - name: validate destructive package
        run: echo "validating delta changes destructive package"

      - name: deploy package
        run: echo "deploying delta changes package"

      - name: deploy destructive package
        run: echo "deploying delta changes destructive package"
          
         
          
        
